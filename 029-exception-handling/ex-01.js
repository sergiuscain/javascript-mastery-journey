
// Пример использования try...catch для обработки ошибок
try {
    // Попытка выполнения потенциально опасного кода
    console.log(nonExistentVariable); // Обращение к несуществующей переменной вызовет ReferenceError
} catch (error) {
    // Блок, перехватывающий и обрабатывающий ошибку
    console.error('Произошла ошибка:', error.message); // Вывод сообщения об ошибке
} finally {
    // Блок, который выполнится в любом случае, независимо от того, возникла ошибка или нет
    console.log('Блок finally выполнен');
}

// Пример использования throw для генерации ошибок
try {
    // Условие, при котором будет сгенерирована ошибка
    let condition = false;
    if (!condition) {
        throw new Error('Условие не выполнено'); // Генерация ошибки с пользовательским сообщением
    }
} catch (error) {
    // Обработка сгенерированной ошибки
    console.error('Произошла ошибка:', error.message);
}

// Пример создания пользовательского класса ошибок
class CustomError extends Error {
    constructor(message) {
        super(message); // Вызов конструктора базового класса Error
        this.name = this.constructor.name; // Назначение имени ошибки
    }
}

// Пример использования пользовательского класса ошибок
try {
    // Условие, при котором будет сгенерирована пользовательская ошибка
    let anotherCondition = false;
    if (!anotherCondition) {
        throw new CustomError('Специфическая ошибка'); // Генерация пользовательской ошибки
    }
} catch (error) {
    // Обработка пользовательской ошибки
    console.error('Произошла ошибка:', error.message);
}
